{"version":3,"sources":["../../src/events/DispatcherEvent.js"],"names":["DispatcherEvent","eventName","callbacks","callback","push","index","indexOf","splice","data","forEach"],"mappings":";;;;;;;;;;;;IAAqBA,e;AACnB,2BAAaC,SAAb,EAAwB;AAAA;;AACtB,SAAKA,SAAL,GAAiBA,SAAjB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACD;;;;qCACiBC,Q,EAAU;AAC1B,WAAKD,SAAL,CAAeE,IAAf,CAAoBD,QAApB;AACD;;;uCAEmBA,Q,EAAU;AAC5B,UAAME,QAAQ,KAAKH,SAAL,CAAeI,OAAf,CAAuBH,QAAvB,CAAd;AACA,UAAIE,QAAQ,CAAC,CAAb,EAAgB;AACd,aAAKH,SAAL,CAAeK,MAAf,CAAsBF,KAAtB,EAA6B,CAA7B;AACD;AACF;;;yBAEKG,I,EAAM;AACV,UAAMN,yCAAgB,KAAKA,SAArB,EAAN;AACAA,gBAAUO,OAAV,CAAkB,UAACN,QAAD,EAAc;AAC9BA,iBAASK,IAAT;AACD,OAFD;AAGD;;;;;;kBArBkBR,e","file":"DispatcherEvent.js","sourcesContent":["export default class DispatcherEvent {\n  constructor (eventName) {\n    this.eventName = eventName;\n    this.callbacks = [];\n  }\n  registerCallback (callback) {\n    this.callbacks.push(callback);\n  }\n\n  unregisterCallback (callback) {\n    const index = this.callbacks.indexOf(callback);\n    if (index > -1) {\n      this.callbacks.splice(index, 1);\n    }\n  }\n\n  emit (data) {\n    const callbacks = [...this.callbacks];\n    callbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n}\n"]}